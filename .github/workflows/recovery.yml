name: Build Recovery (TWRP, SHRP, PBRP)
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Free up storage space
        run: |
          echo "üßπ Cleaning up default runner packages to free space..."
          sudo rm -rf /usr/share/dotnet /opt/ghc /usr/local/lib/android /opt/hostedtoolcache
          sudo apt clean
          docker image prune -a -f || true
          df -h

      - name: Install required packages and repo tool
        run: |
          echo "üì¶ Installing build dependencies..."
          sudo apt update
          sudo apt -y install wget zip curl git
          wget -qO - https://github.com/SA-17/Recovery_builder/raw/main/scripts/cleanup.sh | bash
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install \
            bc bison build-essential ccache clang cmake curl flex g++-multilib gcc-multilib \
            git gnupg gperf imagemagick lib32ncurses5-dev lib32readline-dev lib32z1-dev \
            liblz4-tool libncurses5-dev libsdl1.2-dev libssl-dev libxml2 libxml2-utils \
            lzop pngcrush rsync schedtool squashfs-tools tar zip zlib1g-dev aria2 \
            python3 python3-pip libtinfo5
          sudo ln -sf /usr/bin/python3 /usr/bin/python || true
          sudo curl --create-dirs -L -o /usr/local/bin/repo -O -L https://storage.googleapis.com/git-repo-downloads/repo
          sudo chmod a+rx /usr/local/bin/repo
          df -h

      - name: Install Python 2 for legacy build scripts
        run: |
          echo "üêç Installing Python 2 for legacy AOSP scripts..."
          sudo apt update
          sudo apt install -y python2
          sudo ln -sf /usr/bin/python2 /usr/bin/python
          python --version || true

      - name: Initialize and sync source
        run: |
          source config.sh
          mkdir work && cd work
          echo "üì° Initializing repo..."
          repo init -u $MANIFEST -b $BRANCH --depth=1
          echo "üîÅ Syncing source..."
          repo sync -c -j$(nproc) --force-sync --no-clone-bundle --no-tags --prune
          git clone $DT_LINK -b $DT_BRANCH device/$VENDOR/$DEVICE
          echo "üßπ Removing .repo to save space..."
          sudo rm -rf .repo
          df -h

      - name: Setup build environment
        run: |
          source config.sh
          cd work
          export USE_CCACHE=1
          export CCACHE_DIR=/tmp/ccache
          ccache -M 5G
          . build/envsetup.sh
          lunch $TYPE$SYM$DEVICE-eng
          export ALLOW_MISSING_DEPENDENCIES=true
          df -h

      - name: Build recovery image
        run: |
          source config.sh
          cd work
          echo "‚öôÔ∏è Building recovery..."
          mka $TARGET -j$(nproc)
          df -h

      - name: Make flashable ZIP
        run: |
          source config.sh
          cd work
          echo "üì¶ Creating flashable ZIP..."
          wget -qO - https://github.com/SA-17/Recovery_builder/raw/main/scripts/bake.sh | bash
          df -h

      - name: Clean build intermediates
        run: |
          cd work
          echo "üßΩ Cleaning intermediates to save storage..."
          sudo rm -rf out/target out/soong .repo
          df -h

      - name: Upload recovery release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_id }}
          name: "Recovery Image"
          files: work/recovery.zip
